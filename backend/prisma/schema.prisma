generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  editor
  viewer
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  name          String?
  passwordHash  String
  role          Role           @default(viewer)
  isActive      Boolean        @default(true)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  refreshTokens RefreshToken[]

  @@map("users")
}

model RefreshToken {
  id         String   @id @default(uuid())
  tokenHash  String   @unique
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  revokedAt  DateTime?
  replacedBy String?

  @@map("refresh_tokens")
}

model DataSource {
  id        Int      @id @default(autoincrement())
  type      String   @unique
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model MetricsDashboard {
  id        String   @id @default(cuid())
  name      String
  panels    Json     // Array of panels with PromQL, chart type, thresholds
  createdBy String
  createdAt DateTime @default(now())
}

model MetricsPanel {
  id          String   @id @default(cuid())
  dashboardId String
  title       String
  query       String
  chartType   String
  thresholds  Json?    // optional thresholds
  createdAt   DateTime @default(now())
}